task("enableComposite") {
    group = 'Tools'
    description = "Enable scan composite build"
    doLast {
        new File("$rootDir/.compositeScan-enable").createNewFile()
    }
}

task("disableComposite") {
    group = 'Tools'
    description = "disable scan composite build"
    doLast {
        File fileComposite = new File("$rootDir/.compositeScan-enable")
        if (fileComposite.exists()) {
            fileComposite.delete()
        }
    }
}

if (new File("${rootDir}/.compositeScan-enable").exists()) {
    def startTime = System.nanoTime()
    gradle.ext.compositeProjects.each { path ->
        if (!"$rootDir".equals("${path}")) {
            def lastPaths = path.replace("$rootDir/", "").replace("\"", "").trim().split("/")
            def lastPath = lastPaths[lastPaths.size() - 1]
            task("enable${lastPath}") {
                group = 'Tools'
                description = "Enable ${lastPath} composite build"
                doLast {
                    new File("${path}/.composite-enable").createNewFile()
                }
            }
            task("disable${lastPath}") {
                group = 'Tools'
                description = "Disable ${lastPath} composite build"
                doLast {
                    File fileComposite = new File("${path}/.composite-enable")
                    if (fileComposite.exists()) {
                        fileComposite.delete()
                    }
                }
            }
        }
    }
    def endTime = System.nanoTime()

    def diff = (endTime - startTime)

    println diff
}
