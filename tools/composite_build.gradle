task("enableComposite") {
    group = 'Tools'
    description = "Enable scan composite build"
    doLast {
        new File("$rootDir/.compositeScan-enable").createNewFile()
    }
}

task("disableComposite") {
    group = 'Tools'
    description = "disable scan composite build"
    doLast {
        File fileComposite = new File("$rootDir/.compositeScan-enable")
        if (fileComposite.exists()) {
            fileComposite.delete()
        }
    }
}

def registerEnablerDisablerCompositeTasks(projectsPath) {
    projectsPath.each { path ->
        if (rootDir.path != path) {
            def lastPaths = path.replace("$rootDir/", "").replace("\"", "").trim().split("/")
            def projectName = lastPaths[lastPaths.size() - 1]
            registerEnablerCompositeTask(path, projectName)
            registerDisablerCompositeTask(path, projectName)
        }
    }
}

def registerEnablerCompositeTask(path, projectName) {
    tasks.register("enable${projectName}") { task ->
        task.group = 'Tools'
        task.description = "Enable ${projectName} composite build"
        task.doLast {
            new File("${path}/.composite-enable").createNewFile()
        }
    }
}

def registerDisablerCompositeTask(path, projectName) {
    tasks.register("disable${projectName}") { task ->
        task.group = 'Tools'
        task.description = "Disable ${projectName} composite build"
        task.doLast {
            File fileComposite = new File("${path}/.composite-enable")
            if (fileComposite.exists()) {
                fileComposite.delete()
            }
        }
    }
}

if (new File("${rootDir}/.compositeScan-enable").exists()) {
    def startTime = System.nanoTime()
    registerEnablerDisablerCompositeTasks(gradle.ext.compositeProjects)
    def endTime = System.nanoTime()

    def diff = (endTime - startTime)
    def msDiff = Math.floor(diff / 1000000).toInteger()
    def nsDiff = diff - msDiff * 1000000

    println "Enabler disabler task registered in ${((msDiff != 0) ? "${msDiff} ms ": "")}${nsDiff} ns"
}